{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/lighthouse/newfile/react-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lighthouse/newfile/react-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InfectionInstance = void 0;\nvar Infecter_1 = require(\"./Infecter\");\nvar Utils_1 = require(\"../../Utils\");\nvar InfectionInstance = /*#__PURE__*/function () {\n  function InfectionInstance(container) {\n    _classCallCheck(this, InfectionInstance);\n    this.container = container;\n    this.container.infecter = new Infecter_1.Infecter(this.container);\n  }\n  _createClass(InfectionInstance, [{\n    key: \"particlesSetup\",\n    value: function particlesSetup() {\n      var _a;\n      var options = this.container.actualOptions;\n      for (var i = 0; i < options.infection.infections; i++) {\n        var notInfected = this.container.particles.array.filter(function (p) {\n          var infP = p;\n          if (!infP.infection) {\n            infP.infection = {};\n          }\n          return infP.infection.stage === undefined;\n        });\n        var infected = Utils_1.itemFromArray(notInfected);\n        (_a = this.container.infecter) === null || _a === void 0 ? void 0 : _a.startInfection(infected, 0);\n      }\n    }\n  }, {\n    key: \"particleFillColor\",\n    value: function particleFillColor(particle) {\n      var infParticle = particle;\n      var options = this.container.actualOptions;\n      if (!infParticle.infection) {\n        return;\n      }\n      var infectionStage = infParticle.infection.stage;\n      var infection = options.infection;\n      var infectionStages = infection.stages;\n      return infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n    }\n  }, {\n    key: \"particleStrokeColor\",\n    value: function particleStrokeColor(particle) {\n      return this.particleFillColor(particle);\n    }\n  }]);\n  return InfectionInstance;\n}();\nexports.InfectionInstance = InfectionInstance;","map":null,"metadata":{},"sourceType":"script"}