{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/lighthouse/newfile/react-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/lighthouse/newfile/react-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/home/lighthouse/newfile/react-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/home/lighthouse/newfile/react-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/home/lighthouse/newfile/react-resume/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Rectangle = void 0;\nvar Range_1 = require(\"./Range\");\nvar Rectangle = /*#__PURE__*/function (_Range_1$Range) {\n  _inherits(Rectangle, _Range_1$Range);\n  function Rectangle(x, y, width, height) {\n    var _this;\n    _classCallCheck(this, Rectangle);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Rectangle).call(this, x, y));\n    _this.size = {\n      height: height,\n      width: width\n    };\n    return _this;\n  }\n  _createClass(Rectangle, [{\n    key: \"contains\",\n    value: function contains(point) {\n      var w = this.size.width;\n      var h = this.size.height;\n      var pos = this.position;\n      return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(range) {\n      var rect = range;\n      var circle = range;\n      var w = this.size.width;\n      var h = this.size.height;\n      var pos1 = this.position;\n      var pos2 = range.position;\n      if (circle.radius !== undefined) {\n        return circle.intersects(this);\n      } else if (rect.size !== undefined) {\n        var size2 = rect.size;\n        var w2 = size2.width;\n        var h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n      }\n      return false;\n    }\n  }]);\n  return Rectangle;\n}(Range_1.Range);\nexports.Rectangle = Rectangle;","map":null,"metadata":{},"sourceType":"script"}